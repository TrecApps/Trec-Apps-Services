spring.datasource.url=${DB_URL}

# Register with Eureka
spring.application.name=resource-service
eureka.client.fetch-registry=false
eureka.client.service-url.defaultZone=http://localhost:8081/eureka
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10

server.servlet.context-path=/resources
server.port=8083

#${DB_PASSWORD}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}

# Security Configuration
spring.security.oauth2.client.registration.custom-client.client-id=id
spring.security.oauth2.client.registration.custom-client.client-secret=secret
spring.security.oauth2.client.registration.custom-client.client-authentication-method=basic
spring.security.oauth2.client.registration.custom-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.custom-client.provider=trecapps-user-service
spring.security.oauth2.client.registration.custom-client.redirect-uri=http://localhost:8083/resources/
# trec.redirect-uri=http://localhost:8083/resources/


spring.security.oauth2.client.provider.trecapps-user-service.token-uri=http://localhost:8081/auth/oauth2/token
spring.security.oauth2.client.provider.trecapps-user-service.authorization-uri=http://localhost:8081/auth/oauth2/authorize
spring.security.oauth2.client.provider.trecapps-user-service.user-info-uri=http://localhost:8081/auth/oauth2/userinfo


#hibernate config
spring.jpa.database-platform=${DB_DIALECT}

hibernate.enable_lazy_load_no_trans=false

spring.jpa.hibernate.ddl-auto=update

# spring.jackson.serialization.fail-on-empty-beans=false

# Keys
# trec.key.public=${TREC_PUBLIC_KEY}

